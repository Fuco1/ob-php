* ob-php

** Org mode Babel support for PHP

*** Prerequisites for Sessions

Per default Babel doesn't use Sessions, so this is only needed for advanced operations...

- boris - PHP Read Eval Print Loop (REPL)

  https://github.com/d11wtq/Boris

  *I wasted many hours trying to get the lousy PHP shell to work here (php -a). Then I discovered that it wasn't even the real shell, but "interactive mode". I have no idea why as =readline= was available.*

  I also had to comment this in =php.ini= for Boris to work:

  #+BEGIN_SRC conf
  ; disable_functions = pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,
  #+END_SRC

- php-boris - an Emacs extension for Boris

  From [[http://melpa.milkbox.net/][MELPA]], install via =M-x package-install=

  *Currently only sessions with output work*

*** Manual installation

**** Load/evaluate the code and require =ob-php=

#+BEGIN_SRC emacs-lisp
  (with-temp-buffer
    (url-insert-file-contents "https://raw.github.com/steckerhalter/ob-php/master/ob-php.el")
    (eval-buffer))
  (require 'ob-php)
#+END_SRC


**** Add PHP to the allowed languages for Babel

#+BEGIN_SRC emacs-lisp
  (add-to-list 'org-babel-load-languages '(php . t))
  (org-babel-do-load-languages 'org-babel-load-languages org-babel-load-languages)
#+END_SRC

That's it, you should be good to go!

*** El-Get Recipe

#+BEGIN_SRC emacs-lisp
  (:name ob-php
         :type http
         :url "https://raw.github.com/steckerhalter/ob-php/master/ob-php.el"
         :prepare (progn
                    (add-to-list 'org-babel-load-languages '(php . t))
                    (org-babel-do-load-languages 'org-babel-load-languages org-babel-load-languages)))
  ))
#+END_SRC


*** Usage
   :PROPERTIES:
   :exports:  both
   :END:


**** No session

#+BEGIN_SRC php :var x="bear" :var y="mordor"
  4 + 4;
  print "dude\n";
  print $x;
  return $y;
#+END_SRC

#+RESULTS:
: mordor

#+BEGIN_SRC php :results output :var x="bear" :var y="mordor"
  4 + 4;
  print "dude\n";
  print $x;
  return $y;
#+END_SRC

#+RESULTS:
: dude
: bear

**** Pretty printing

#+BEGIN_SRC php :results pp
  $dude = new stdClass();
  $dude->man = "green";
  $dude->pleora = new stdClass();
  return $dude;
#+END_SRC

#+RESULTS:
: stdClass Object
: (
:     [man] => green
:     [pleora] => stdClass Object
:         (
:         )
:
: )

**** Org output

#+BEGIN_SRC php :var sea="blue" :results output org
  $test = array(
      array('forest', 'green'),
      array('sea',  $sea),
  );

  foreach ($test as $row) {
      foreach($row as $cell) { print '|' . $cell; };
      print "\n";
  }
#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
| forest | green |
| sea    | blue  |
#+END_SRC

**** TODO Session with output
- Note taken on [2013-08-06 Tue 01:43] \\
  This is wrong and should be fixed. The result is not really output!

#+BEGIN_SRC php :results output :session
  $x = array("mond" => "schein", array("sonate", "betthofen"));
#+END_SRC

#+RESULTS:
: 'mond' => 'schein',
:   0 => array(
:     0 => 'sonate',
:     1 => 'betthofen'
:   )
: )


**** Use previouly defined PHP variable

#+BEGIN_SRC php :results output :session
print $x;
#+END_SRC

#+RESULTS:
: PHP Notice:  Array to string conversion in /home/reto/boris/lib/Boris/EvalWorker.php(133) : eval()'d code on line 1
: Array


**** Why does this make an example block?

#+BEGIN_SRC php :results output :session
  var_dump($x);
#+END_SRC

#+RESULTS:
#+begin_example
array(2) {
  ["mond"]=>
  string(6) "schein"
  [0]=>
  array(2) {
    [0]=>
    string(6) "sonate"
    [1]=>
    string(9) "betthofen"
  }
}
#+end_example

#+HTML: <style>body { margin: 20px !important; }</style>
#+HTML: <script src="https://code.jquery.com/jquery.js"></script>
#+HTML: <script src="https://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/js/bootstrap.min.js"></script>

* Options                                                  :noexport:ARCHIVE:

#+OPTIONS: todo:nil html-style:nil
#+INFOJS_OPT: view:showall toc:nil mouse:#555555
#+HTML_HEAD: <link href="https://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css" rel="stylesheet">
#+HTML_HEAD: <link href="http://danneu.com/bag/darkstrap/legacy/stylesheets/darkstrap.css" rel="stylesheet">
