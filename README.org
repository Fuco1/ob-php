* ob-php

** Org mode Babel support for PHP

*Sessions are not yet supported*

*** Manual installation

**** Load/evaluate the code and require =ob-php=

#+BEGIN_SRC emacs-lisp
  (with-temp-buffer
    (url-insert-file-contents "https://raw.github.com/steckerhalter/ob-php/master/ob-php.el")
    (eval-buffer))
  (require 'ob-php)
#+END_SRC


**** Add PHP to the allowed languages for Babel

#+BEGIN_SRC emacs-lisp
  (add-to-list 'org-babel-load-languages '(php . t))
  (org-babel-do-load-languages 'org-babel-load-languages org-babel-load-languages)))
#+END_SRC

That's it, you should be good to go!

*** El-Get Recipe

#+BEGIN_SRC emacs-lisp
  (:name ob-php
         :type http
         :url "https://raw.github.com/steckerhalter/ob-php/master/ob-php.el"
         :prepare (progn
                    (add-to-list 'org-babel-load-languages '(php . t))
                    (org-babel-do-load-languages 'org-babel-load-languages org-babel-load-languages)))
  ))
#+END_SRC


*** Usage

#+BEGIN_SRC php :var x="bear" :var y="mordor"
  4 + 4;
  print "dude\n";
  print $x;
  return $y;
#+END_SRC

#+RESULTS:
: mordor

#+BEGIN_SRC php :results output :var x="bear" :var y="mordor"
  4 + 4;
  print "dude\n";
  print $x;
  return $y;
#+END_SRC

#+RESULTS:
: dude
: bear

#+NAME: dude
#+BEGIN_SRC php :results pp
  $dude = new stdClass();
  $dude->man = "green";
  $dude->pleora = new stdClass();
  return $dude;
#+END_SRC

#+RESULTS:
: stdClass Object
: (
:     [man] => green
:     [pleora] => stdClass Object
:         (
:         )
:
: )

#+BEGIN_SRC php :var sea="blue" :results output org
  $test = array(
      array('forest', 'green'),
      array('sea',  $sea),
  );

  foreach ($test as $row) {
      foreach($row as $cell) { print '|' . $cell; };
      print "\n";
  }
#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
| forest | green |
| sea    | blue  |
#+END_SRC
